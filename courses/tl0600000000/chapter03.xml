<chapter type="" id="tl0603000000">
<title><content-text>Funcionalidade e Protocolos da Camada de Aplicação</content-text></title>
<section type="ChapterIntroduction" id="tl0603000000">
<title><content-text>Introdução ao Capítulo</content-text></title>
<topic type="" id="tl0603000100">
<title><content-text>Introdução ao Capítulo</content-text></title>
<page type="OneColumn" id="tl0603000101"><content-media type="StaticGraphic" id="cm2051715464"><title><content-text></content-text></title><media ref="tl0603000000/tl0603000000/tl0603000100/tl0603000101/cm2051715464.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603000000/tl0603000100/tl0603000101/cm2051715464text.xml"/></content-media> <content-text><p>A maioria de nós vivencia a Internet através da World Wide Web, de serviços de e-mail e programas de compartilhamento de arquivos. Tais aplicações, e muitas outras, fornecem interface à rede subjacente, permitindo que enviemos e recebamos informações de forma relativamente fácil. Normalmente, as aplicações que utilizamos são intuitivas, o que significa que podemos acessar e usar sem saber como funcionam. No entanto, para profissionais de rede, é importante saber como uma aplicação pode formatar, transmitir e interpretar mensagens enviadas e recebidas através da rede.</p><p>Visualizar os mecanismos que possibilitam a comunicação pela rede fica mais fácil se utilizarmos a estrutura em camadas do modelo <content-link target="cg8029982631" type="glossary">Open System Interconnection (OSI)</content-link>. Neste capítulo, o foco será na função de uma camada, a de Aplicação, e seus componentes: aplicação, serviços e protocolos. Exploraremos como esses três elementos possibilitam uma comunicação robusta por esta rede de informações.</p><p>Neste capítulo, você aprenderá a:</p><ul><li> Descrever como as funções das três camadas superiores do modelo OSI fornecem serviços de rede a aplicações de usuário final.</li><li> Descrever como os protocolos de Camada de Aplicação TCP/IP fornecem os serviços especificados pelas camadas superiores do modelo OSI.</li><li> Definir como as pessoas utilizam a Camada de Aplicação para se comunicarem pela rede de informações.</li><li> Descrever a função das aplicações TCP/IP mais conhecidas, como a World Wide Web e e-mail, e seus serviços (HTTP, DNS, SMB, DHCP, SMTP/POP e Telnet).</li><li> Descrever os processos de compartilhamento de arquivos que utilizam aplicações não-hierárquicas e o protocolo Gnutella.</li><li> Explicar como os protocolos garantem que serviços executados em um tipo de dispositivos possam enviar e receber dados de muitos dispositivos de rede diferentes.</li><li> Utilizar ferramentas de análise de rede para examinar e explicar como aplicações de usuário comuns funcionam.</li></ul></content-text></page></topic></section> <section type="" id="tl0603010000">
<title><content-text>Aplicações - A Interface Entre as Redes</content-text></title>
<topic type="" id="tl0603010100">
<title><content-text>Modelo OSI e TCP/IP</content-text></title>
<page type="OneColumn" id="tl0603010101"><content-media type="InteractiveGraphicHotspots" id="cm2240918423"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010100/tl0603010101/cm2240918423.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010100/tl0603010101/cm2240918423text.xml"/></content-media> <content-text><p>O modelo de referência Open Systems Interconnection (OSI) é uma representação abstrata em camadas criado como diretriz para o design de protocolos de rede. O modelo OSI divide o processo de redes em sete camadas lógicas, cada uma com funcionalidades exclusivas e com serviços e protocolos específicos atribuídos. </p><p>Neste modelo, as informações são passadas de uma camada para a outra, começando na camada de Aplicação no host transmissor, continuando hierarquia abaixo, até a camada Física, passando para o canal de comunicações até o host de destino, onde a informação retorna hierarquia acima, terminando na camada de Aplicação. A figura mostra os passos deste processo.</p><p>A camada de Aplicação, a número sete, é a camada superior dos modelos OSI e TCP/IP. É a camada que fornece a interface entre as aplicações que utilizamos para comunicação e a rede subjacente pela qual nossas mensagens são transmitidas. Os protocolos da camada de aplicação são utilizados para troca de dados entre programas executados nos hosts de origem e de destino. Há muitos protocolos da camada de Aplicação, e outros novos estão em constante desenvolvimento.</p></content-text></page> <page type="OneColumn" id="tl0603010102"><content-media type="StaticGraphic" id="cm2880338922"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010100/tl0603010102/cm2880338922.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010100/tl0603010102/cm2880338922text.xml"/></content-media> <content-text><p>Embora o conjunto de protocolos TCP/IP tenha sido desenvolvido antes da definição do modelo OSI, a funcionalidade dos protocolos da camada de aplicação TCP/IP se ajusta à estrutura das três camadas superiores do modelo OSI: camadas de Aplicação, Apresentação e Sessão.</p><p>A maioria dos protocolos da camada de Aplicação TCP/IP foi desenvolvida antes do surgimento de computadores pessoais, interfaces gráficas de usuário e objetos multimídia. Como resultado, esses protocolos implementam muito pouco da funcionalidade especificada nas camadas de Apresentação e Sessão do modelo OSI.</p><p><b>Camada de Apresentação</b></p><p>A camada de Apresentação tem três funções principais:</p><ul><li> Codificação e conversão de dados da camada de Aplicação para garantir que os dados do <content-link target="cg8989672383" type="glossary">dispositivo de origem</content-link> possam ser interpretados pela aplicação adequada no dispositivo de destino.</li><li> Compressão dos dados de forma que eles possam ser descomprimidos pelo dispositivo de destino.</li><li> Criptografia dos dados para transmissão e decodificação de dados quando o destino os recebe.</li></ul><p></p><p>As implementações da camada de Apresentação não são associadas normalmente a uma pilha de protocolos em particular. Os padrões para vídeo e gráficos são exemplos. Alguns padrões conhecidos para vídeo incluem QuickTime e Motion Picture Experts Group (MPEG). QuickTime é uma especificação da Apple Computer para vídeo e áudio e MPEG é um padrão para compressão e codificação de vídeo. </p><p>Entre os formatos de imagens gráficas conhecidos, há Graphics Interchange Format (GIF), Joint Photographic Experts Group (JPEG) e Tagged Image File Format (TIFF). GIF e JPEG são padrões de compressão e codificação para imagens gráficas, e TIFF é um formato de codificação padrão para imagens gráficas. </p><p><b>Camada de Sessão</b></p><p>Como o próprio nome diz, as funções na camada de Sessão criam e mantêm diálogos entre as aplicações de origem e destino. A camada de Sessão lida com a troca de informações para iniciar diálogos, mantê-los ativos e reiniciar sessões interrompidas ou ociosas por um longo período. </p><p>A maioria das aplicações, como navegadores Web ou clientes de e-mail, incorpora a funcionalidade das camadas OSI 5, 6 e 7.</p></content-text></page> <page type="OneColumn" id="tl0603010103"><content-media type="StaticGraphic" id="cm8607723802"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010100/tl0603010103/cm8607723802.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010100/tl0603010103/cm8607723802text.xml"/></content-media> <content-text><p>Os protocolos da camada de Aplicação TCP/IP mais conhecidos são aqueles que fornecem a troca de informações de usuários. Esses protocolos especificam as informações de formato e controle necessários para muitas funções comuns de comunicação na Internet. Entre esses protocolos TCP/IP, há:</p><ul><li> O Protocolo de Serviço de Nome de Domínio (Domain Name Service Protocol (DNS)) é utilizado para resolver nomes a endereços IP.</li><li> O Protocolo de Transferência de Hipertexto (Hypertext Transfer Protocol (HTTP)) é utilizado para transferir arquivos que compõem as páginas Web da World Wide Web.</li><li> O <content-link target="cg5091523352" type="glossary">Protocolo SMTP</content-link> é utilizado para transferência de mensagens e anexos de e-mail.</li><li> Telnet, um protocolo de simulação de terminal, é utilizado para fornecer acesso remoto a servidores e dispositivos de rede.</li><li> O Protocolo de Transferência de Arquivos (File Transfer Protocol (FTP)) é utilizado para transferência interativa de arquivos entre sistemas.</li></ul><p>Os protocolos no conjunto TCP/IP geralmente são definidos por Requests for Comments (RFCs). A Internet Engineering Task Force (IETF) mantém as RFCs como padrão para o conjunto TCP/IP.</p></content-text></page></topic> <topic type="" id="tl0603010200">
<title><content-text>Software da Camada de Aplicação</content-text></title>
<page type="OneColumn" id="tl0603010201"><content-media type="InteractiveGraphicRollovers" id="cm9807810457"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010200/tl0603010201/cm9807810457.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010200/tl0603010201/cm9807810457text.xml"/></content-media> <content-text><p>As funções associadas aos protocolos da camada de Aplicação permitem que nossa rede humana faça interface com a rede de dados subjacente. Quando abrimos um navegador Web ou uma janela de mensagem instantânea, uma aplicação é iniciada e o programa é colocado na memória do dispositivo quando executado. Cada programa em execução carregado em um dispositivo é mencionado como um processo. </p><p>Dentro da camada de Aplicação, há duas formas de programa de software ou processos que fornecem acesso à rede: aplicações e serviços. </p><p><b>Aplicações que Detectam Redes</b></p><p>Aplicações são programas de software usados por pessoas para se comunicarem pela rede. Algumas aplicações de usuário final detectam redes, o que significa que elas implementam os protocolos da camada de Aplicação e conseguem se comunicar diretamente com as camadas inferiores da pilha de protocolos. Clientes de e-mail e navegadores Web são exemplos desses tipos de aplicação. </p><p><b>Serviços da camada de Aplicação</b></p><p>Outros programas podem precisar da assistência dos serviços da camada de Aplicação para utilizar recursos de rede, como transferência de arquivos ou spooling de impressão em rede. Embora transparentes ao usuário, esses serviços são os programas que fazem interface com a rede e preparam os dados para transferência. Diferentes tipos de dados - seja texto, gráficos ou vídeo - exigem serviços de rede diferentes para garantir que sejam preparados adequadamente para processamento pelas funções que ocorrem nas camadas inferiores do modelo OSI. </p><p>Cada aplicação ou serviço de rede utiliza protocolos que definem os padrões e formatos de dados a serem utilizados. Sem protocolos, a rede de dados não teria uma maneira comum de formatar e direcioná-los. Para entender a função de vários serviços de rede, é necessário se familiarizar com os protocolos subjacentes que regem a sua operação.</p><p><b>Passe pelos botões na figura para ver exemplos.</b></p></content-text></page></topic> <topic type="" id="tl0603010300">
<title><content-text>Aplicações de Usuário, Serviços e Protocolos da Camada de Aplicação</content-text></title>
<page type="OneColumn" id="tl0603010301"><content-media type="AnimationPartialScreen" id="cm9515498309"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010300/tl0603010301/cm9515498309.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010300/tl0603010301/cm9515498309text.xml"/></content-media> <content-text><p>Como já mencionado, a camada de Aplicação utiliza protocolos implementados dentro de aplicações e serviços. Enquanto as aplicações oferecem uma maneira de criar mensagens e serviços da camada de aplicação estabelecem uma interface com a rede, os protocolos fornecem as regras e formatos que regem como os dados são tratados. Todos os três componentes podem ser utilizados por um único programa executável e até mesmo usar o mesmo nome. Por exemplo, ao discutir "Telnet", podemos nos referir à aplicação, ao serviço ou ao protocolo.</p><p>No modelo OSI, as aplicações que interagem diretamente com pessoas são considerados como estando no topo da pilha, assim como as próprias pessoas. Como todas as camadas dentro do modelo OSI, a camada de Aplicação se fia nas funções nas camadas inferiores para completar o processo de comunicação. Dentro da camada de Aplicação, os protocolos especificam que mensagens são trocadas entre os hosts de origem e destino, a <content-link target="cg9696293660" type="glossary">sintaxe</content-link> dos comandos de controle, o tipo e formato dos dados sendo transmitidos e os métodos adequados para notificação de erros e recuperação. </p><p><b>Execute a animação para ver a interação entre aplicações, serviços e protocolos.</b></p></content-text></page></topic> <topic type="" id="tl0603010400">
<title><content-text>Funções de Protocolos da Camada de Aplicação</content-text></title>
<page type="OneColumn" id="tl0603010401"><content-media type="StaticGraphic" id="cm3951777757"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010400/tl0603010401/cm3951777757.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010400/tl0603010401/cm3951777757text.xml"/></content-media> <content-text><p>Os protocolos da camada de Aplicação são utilizados pelos dispositivos de origem e destino durante uma <content-link target="cg6530391139" type="glossary">sessão</content-link> de comunicação. Para que a comunicação tenha sucesso, os protocolos da camada de aplicação implementados nos hosts de origem e destino devem corresponder.</p><p>Os protocolos estabelecem regras coerentes para troca de dados entre aplicações e serviços carregados nos dispositivos participantes. Os protocolos especificam como os dados dentro das mensagens são estruturados e os tipos de mensagens enviados entre origem e destino. Tais mensagens podem ser solicitações de serviço, confirmações, mensagens de dados, de status ou de erro. Os protocolos também definem diálogos de mensagem, garantindo que uma mensagem enviada seja conhecida pela resposta esperada e que os serviços corretos sejam chamados quando houver transferência de dados. </p><p>Muitos tipos diferentes de aplicações se comunicam via redes de dados. Portanto, os serviços da camada de Aplicação devem implementar vários protocolos para fornecer a gama desejada de experiências de comunicação. Cada protocolo tem uma finalidade específica e contém as características necessárias para atender a tal finalidade. Os detalhes do protocolo correto em cada camada devem ser seguidos para que as funções em uma camada façam interface adequadamente com os serviços na camada inferior. </p><p>Aplicações e serviços também podem utilizar diversos protocolos no decorrer de uma única conversa. Um protocolo pode especificar como estabelecer a conexão de rede e outro, descrever o processo para transferência de dados quando a mensagem passa para a camada imediatamente abaixo.</p></content-text></page></topic></section> <section type="" id="tl0603020000">
<title><content-text>Fazer Provisões para Aplicações e Serviços</content-text></title>
<topic type="" id="tl0603020100">
<title><content-text>O Modelo Cliente/Servidor</content-text></title>
<page type="OneColumn" id="tl0603020101"><content-media type="InteractiveGraphicHotspots" id="cm4067501249"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020100/tl0603020101/cm4067501249.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020100/tl0603020101/cm4067501249text.xml"/></content-media> <content-text><p>Quando as pessoas tentam acessar informações em seus dispositivos, seja um PC, laptop, PDA, celular ou outro dispositivo conectado a uma rede, os dados podem não estar fisicamente armazenados neles. Se este for o caso, uma solicitação para acessar tais informações deve ser feita ao dispositivo onde os dados estão. </p><p><b>O modelo Cliente/Servidor</b></p><p>No <content-link target="cg6256587515" type="glossary">modelo cliente/servidor</content-link>, o dispositivo que solicita as informações é chamado de cliente, e o que responde à solicitação é chamado de servidor. Os processos de cliente e servidor são considerados como estando na camada de Aplicação. O cliente começa o intercâmbio ao solicitar dados do servidor, que responde enviando uma ou mais sequências de dados ao cliente. Os protocolos da camada de Aplicação descrevem o formato das solicitações e respostas entre clientes e servidores. Além da transferência real de dados, esse intercâmbio também pode exigir informações de controle, como autenticação de usuário e identificação de um arquivo de dados a ser transferido. </p><p>Um exemplo de rede cliente/servidor é um ambiente corporativo no qual os funcionários utilizam um servidor de e-mail da empresa para enviar, receber e armazenar e-mails. O cliente de e-mail no computador de um funcionário envia uma solicitação ao servidor de e-mail para qualquer correspondência não lida. O servidor responde enviando o e-mail solicitado ao cliente.</p><p>Embora os dados sejam normalmente descritos como fluindo do servidor ao cliente, alguns sempre vão do cliente ao servidor. O fluxo de dados pode ser igual em ambas as direções, ou mesmo maior na direção do cliente ao servidor. Por exemplo, um cliente pode transferir um arquivo ao servidor para armazenamento. <b>A transferência de dados de um cliente para um servidor é mencionada como um <content-link target="cg5830842516" type="glossary">upload</content-link>, e de um servidor para um cliente, como um download.</b></p><p><b>Passe pela guias na figura para ver a transferência de arquivos.</b></p></content-text></page></topic> <topic type="" id="tl0603020200">
<title><content-text>Servidores</content-text></title>
<page type="OneColumn" id="tl0603020201"><content-media type="StaticGraphic" id="cm8592549807"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020200/tl0603020201/cm8592549807.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020200/tl0603020201/cm8592549807text.xml"/></content-media> <content-text><p><b>Em um contexto geral de rede, qualquer dispositivo que responda a solicitações de aplicações de clientes funciona como um servidor. </b>Um servidor normalmente é um computador que contém informações a serem compartilhadas com muitos sistemas cliente. Por exemplo, páginas Web, documentos, bancos de dados, imagens e arquivos de áudio e vídeo podem ser armazenados em um servidor e entregues aos clientes solicitantes. Em outros casos, como uma impressora em rede, o servidor de impressão fornece as solicitações de impressão do cliente à impressora especificada.</p><p>Diferentes tipos de aplicações de servidor podem ter exigências diferentes para acesso a clientes. Alguns servidores podem exigir autenticação de informações da conta do usuário para verificar se este tem permissão de acesso aos dados solicitados ou de uso de uma operação em particular. Tais servidores se fiam em uma lista central de contas de usuário e às autorizações, ou permissões (para acesso a dados e operações), concedidas a cada usuário. Ao utilizar um cliente FTP, por exemplo, se você solicitar um upload de dados ao servidor FTP, poderá ter permissão para gravar em sua pasta individual, mas não para ler outros arquivos no site.</p><p>Em uma rede cliente/servidor, o servidor executa um serviço, ou processo, às vezes chamado de <content-link target="cg3408713415" type="glossary">daemon</content-link> de servidor. Como a maioria dos serviços, daemons normalmente são executados em segundo plano e não estão sob o controle direto de um usuário final. Daemons são descritos como "ouvintes" de uma solicitação de um cliente, porque são programados para responder sempre que o servidor recebe uma solicitação para o serviço fornecido pelo daemon. Quando um daemon "ouve" uma solicitação de um cliente, troca as mensagens correspondentes com o cliente, como exigido por seu protocolo, e envia os dados solicitados ao cliente no formato adequado.</p></content-text></page></topic> <topic type="" id="tl0603020300">
<title><content-text>Protocolos e Serviços da Camada de Aplicação</content-text></title>
<page type="OneColumn" id="tl0603020301"><content-media type="StaticGraphic" id="cm3063071935"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020300/tl0603020301/cm3063071935.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020300/tl0603020301/cm3063071935text.xml"/></content-media> <content-text><p>Uma única aplicação pode utilizar vários serviços diferentes de suporte da camada de Aplicação. Assim, o que parece para o usuário como uma solicitação para página Web pode totalizar, na verdade, dezenas de solicitações individuais. Além disso, para cada solicitação, diversos processos podem ser executados. Por exemplo, um cliente pode exigir diversos processos individuais para formular apenas uma solicitação a um servidor. </p><p>Além disso, os servidores normalmente têm diversos clientes solicitando informações ao mesmo tempo. Por exemplo, um servidor <b>Telnet</b> pode ter muitos clientes solicitando conexões a ele. Tais solicitações individuais devem ser tratadas simultaneamente e separadamente para que a rede tenha sucesso. Os processos e serviços da camada de Aplicação se fiam no suporte de funções da camada inferior para gerenciar com sucesso as diferentes conversas.</p></content-text></page> <page type="OneColumn" id="tl0603020302"><content-media type="ActivityPKA" id="cm8823765993"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020300/tl0603020302/cm8823765993/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603020000/tl0603020300/tl0603020302/cm8823765993/icontext.xml"/></content-media> <content-text><p>Nesta atividade, você estudará um exemplo simples de interação cliente/servidor, que pode servir de modelo para interações mais complexas no decorrer do curso. </p><p><b>Clique no ícone Packet Tracer para mais detalhes.</b></p></content-text></page></topic> <topic type="" id="tl0603020400">
<title><content-text>Redes e Aplicações Não-Hierárquicas (P2P)</content-text></title>
<page type="OneColumn" id="tl0603020401"><content-media type="StaticGraphic" id="cm1318549008"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020400/tl0603020401/cm1318549008.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020400/tl0603020401/cm1318549008text.xml"/></content-media> <content-text><p><b>O Modelo Não-Hierárquico</b></p><p>Além do modelo cliente/servidor para a rede, também há o modelo não-hierárquico. A rede não-hierárquica envolve duas formas diferentes: design de rede não-hierárquica e aplicações não-hierárquicas (P2P). A duas formas têm características semelhantes, mas, na prática, funcionam de maneira bastante diferente.</p><p><b>Redes Não-Hierárquicas</b></p><p>Em uma rede não-hierárquica, dois ou mais computadores são conectados via rede e podem compartilhar recursos (como impressoras e arquivos) sem ter um servidor dedicado. Cada dispositivo final conectado (conhecido como par (peer)) pode funcionar como cliente ou servidor. Um computador pode assumir o papel de servidor para uma transação ao mesmo tempo em que é o cliente de outra. As funções de cliente e servidor são definidas de acordo com a solicitação.</p><p>Uma rede residencial simples, com dois computadores conectados e compartilhando uma impressora, é um exemplo de rede não-hierárquica. Cada pessoa pode configurar o seu computador para compartilhar arquivos, possibilitar jogos em rede ou compartilhar uma conexão à Internet. Outro exemplo de funcionalidade de rede não-hierárquica é ter dois computadores conectados a uma rede ampla que utilizam aplicações de software para compartilhar recursos entre si através da rede.</p><p>Diferentemente do modelo cliente/servidor, que utiliza servidores dedicados, as redes não-hierárquicas descentralizam os recursos em uma rede. Em vez de localizar informações para compartilhar em servidores dedicados, as informações podem ser encontradas em qualquer lugar em um dispositivo conectado. A maioria dos sistemas operacionais atuais suporta compartilhamento de arquivos e impressão sem exigir um software de servidor adicional. Como redes não-hierárquicas normalmente não utilizam contas de usuário centralizadas, permissões ou monitoramento, é difícil executar políticas de segurança e acesso a redes com mais de alguns poucos computadores. As contas de usuário e direitos de acesso devem ser definidos individualmente em cada dispositivo.</p></content-text></page> <page type="OneColumn" id="tl0603020402"><content-media type="StaticGraphic" id="cm7124535413"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020400/tl0603020402/cm7124535413.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020400/tl0603020402/cm7124535413text.xml"/></content-media> <content-text><p><b>Aplicações Não-Hierárquicas</b></p><p>Uma aplicação não-hierárquica (P2P), diferentemente de uma rede não-hierárquica, permite que um dispositivo aja como cliente e servidor na mesma comunicação. Neste modelo, cada cliente é um servidor e cada servidor é um cliente. Ambos podem iniciar uma comunicação e são considerados iguais no processo de comunicação. No entanto, aplicações não-hierárquicas exigem que cada dispositivo final forneça uma interface de usuário e execute um serviço de segundo plano. Ao iniciar uma aplicação não-hierárquica específica, ela chama a interface de usuário e serviços de segundo plano exigidos. Depois disso, os dispositivos podem se comunicar diretamente.</p><p>Algumas aplicações P2P utilizam um sistema híbrido no qual o compartilhamento de recursos é descentralizado, mas os índices que apontam para as localizações de recursos são armazenados em um diretório centralizado. Em um sistema híbrido, cada par (peer) acessa um servidor de índice para obter a localização de um recurso armazenado em outro par (peer). O servidor de índice também pode ajudar a conectar dois pares, mas quando conectado, a comunicação ocorre entre os dois pares sem comunicação adicional ao servidor de índice.</p><p>Aplicações não-hierárquicas podem ser utilizadas em redes não-hierárquicas, redes de cliente/servidor e pela Internet. </p></content-text></page></topic></section> <section type="" id="tl0603030000">
<title><content-text>Exemplos de Protocolos e Serviços da Camada de Aplicação</content-text></title>
<topic type="" id="tl0603030100">
<title><content-text>Serviços e Protocolo DNS</content-text></title>
<page type="OneColumn" id="tl0603030101"><content-media type="InteractiveGraphicHotspots" id="cm6029139440"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030101/cm6029139440.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030101/cm6029139440text.xml"/></content-media> <content-text><p>Agora que entendemos melhor como as aplicações fornecem uma interface para o usuário e acesso à rede, veremos alguns protocolos específicos usados comumente.</p><p>Como veremos mais adiante neste curso, a camada de Transporte utiliza um <content-link target="cg7935862711" type="glossary">esquema</content-link> de endereçamento chamado número de porta. Os números de porta identificam aplicações e serviços da camada de Aplicação que são a origem e o destino dos dados. Programas de servidor geralmente utilizam números de porta pré-definidos comumente conhecidos por clientes. À medida que examinarmos os diferentes protocolos e serviços da camada de Aplicação TCP/IP, falaremos dos números de porta TCP e UDP normalmente associados a tais serviços. Alguns desses serviços são:</p><ul><li> <content-link target="cg1342888322" type="glossary">Domain Name System (DNS)</content-link> - Porta TCP/UDP 53 </li><li> Hypertext Transfer Protocol (HTTP) - Porta TCP 80 </li><li> Simple Mail Transfer Protocol (SMTP) - Porta TCP 25 </li><li> <content-link target="cg9044211347" type="glossary">Protocolo POP</content-link> - Porta UDP 110 </li><li> Telnet - Porta TCP 23 </li><li> Dynamic Host Configuration Protocol - Porta UDP 67 </li><li> File Transfer Protocol (FTP) - Portas TCP 20 e 21</li></ul><p><b>DNS</b></p><p>Em redes de dados, os dispositivos são rotulados com endereços IP numéricos, para que possam participar do envio e recebimento de mensagens pela rede. No entanto, a maioria das pessoas tem dificuldade em lembrar esse endereço numérico. Assim, os nomes de domínio foram criados para converter o endereço numérico em um nome simples e reconhecível.</p><p>Na Internet, tais nomes de domínio, como www.cisco.com, são muito mais fáceis de lembrar do que 198.133.219.25, que é o endereço numérico real desse servidor. Além disso, se a Cisco decidir alterar o endereço numérico, isso será transparente para o usuário, já que o nome de domínio continuará sendo www.cisco.com. O novo endereço simplesmente será vinculado ao nome de domínio existente e a conectividade será mantida. Quando as redes eram pequenas, era simples manter o mapeamento entre os nomes de domínio e os endereços que eles representavam. No entanto, à medida que as redes começaram a crescer e o número de dispositivos aumentou, este sistema manual ficou inviável. </p><p>O Domain Name System (DNS) foi criado para resolução de nomes de domínio para endereço para tais redes. O DNS utiliza um conjunto distribuído de servidores para definir os nomes associados a tais endereços numerados. </p><p>O <b>protocolo DNS</b> define um serviço automatizado que alia os nomes de recursos com o <content-link target="cg4035112664" type="glossary">endereço de rede</content-link> numérico necessário. Ele inclui o formato para consultas, respostas e formatos de dados. As comunicações do protocolo DNS utilizam um único formato, chamado de mensagem. Este formato de mensagem é utilizado para todos os tipos de consultas de cliente e respostas de servidor, mensagens de erro e transferência de informações de <content-link target="cg4593578524" type="glossary">registro de recursos</content-link> entre servidores.</p></content-text></page> <page type="OneColumn" id="tl0603030102"><content-media type="StaticGraphic" id="cm5056320378"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030102/cm5056320378.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030102/cm5056320378text.xml"/></content-media> <content-text><p>O DNS é um serviço cliente/servidor. No entanto, é diferente dos outros serviços cliente/servidor que examinamos. Enquanto outros serviços utilizam um cliente que é uma aplicação (como navegador Web, cliente de e-mail), o cliente DNS é executado como um serviço. O cliente DNS, às vezes chamado de <content-link target="cg1127976211" type="glossary">resolvedor DNS</content-link>, suporta a resolução de nome para outras aplicações de rede e outros serviços que precisam dele. </p><p>Ao configurar um dispositivo de rede, geralmente fornecemos um ou mais endereços de <b>Servidor DNS</b> que o cliente DNS pode utilizar para resolução de nome. Normalmente, o provedor de serviço de Internet fornece os endereços a serem utilizados para os servidores DNS. Quando a aplicação de um usuário solicita uma conexão a um dispositivo pelo nome, o cliente DNS solicitante consulta um desses servidores de nome para atribuir o nome a um endereço numérico.</p><p>Os sistemas operacionais de computador também têm um utilitário chamado <span class="cmd"><b><content-link target="cg7637958713" type="glossary">nslookup</content-link></b></span> que permite que o usuário <content-link target="cg8511526679" type="glossary">consulte</content-link> manualmente os servidores de nome para decidir um nome de host. Este utilitário também pode ser usado para corrigir problemas de resolução de nome e verificar o status atual dos servidores de nome. </p><p>Na figura, quando o <span class="cmd"><b>nslookup</b></span> é inserido, o servidor DNS padrão configurado para seu host é exibido. Neste exemplo, o servidor DNS é dns-sjk.cisco.com, que tem o endereço 171.68.226.120. </p><p>Então, podemos inserir o nome de um host ou domínio para o qual queremos obter o endereço. Na primeira consulta na figura, uma consulta é feita para www.cisco.com. O servidor de nome respondente dá o endereço 198.133.219.25. </p><p>As consultas mostradas na figura são apenas testes simples. O <span class="cmd"><b>nslookup</b></span> tem muitas opções disponíveis para amplos testes e verificações do processo DNS.</p></content-text></page> <page type="OneColumn" id="tl0603030103"><content-media type="StaticGraphic" id="cm4105716484"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030103/cm4105716484.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030103/cm4105716484text.xml"/></content-media> <content-text><p>Um servidor DNS fornece a resolução de nome utilizando o daemon do nome, frequentemente chamado de "named" (pronuncia-se name-dee). </p><p>O servidor DNS armazena diferentes tipos de registro de recurso utilizados para definir nomes. Esses registros contêm o nome, endereço e tipo de registro.</p><p>Alguns desses tipos de registro são:</p><ul><li> A - endereço do dispositivo final</li><li> NS - servidor de nome <content-link target="cg1352693523" type="glossary">confiável</content-link></li><li> CNAME - nome canônico (ou Nome de Domínio Completo) para um codinome; utilizado quando vários serviços têm um único endereço de rede, mas cada serviço tem sua própria entrada no DNS </li><li> MX - registro de troca de correspondência; mapeia um <content-link target="cg5466107955" type="glossary">nome de domínio</content-link> para uma lista de servidores de troca de e-mail para tal domínio</li></ul><p>Quando um cliente faz uma consulta, o processo "named" do servidor procura em seus próprios registros primeiro para ver se pode decidir o nome. Se não puder decidir o nome utilizando os seus registros armazenados, entra em contato com outros servidores para resolver o nome.</p><p>A solicitação pode ser passada para vários servidores, o que pode demorar um pouco mais e consumir largura de banda. Quando uma correspondência é encontrada e retornada ao servidor solicitante original, o servidor temporariamente armazena o endereço que corresponde ao nome em <content-link target="cg8593750401" type="glossary">cache</content-link>. </p><p>Se tal nome for solicitado novamente, o primeiro servidor poderá retornar o endereço utilizando o valor armazenado em sua cache de nome. Fazer cache reduz o tráfego de rede de dados de consulta do DNS e as cargas dos servidores mais acima na hierarquia. O serviço Cliente DNS nos PCs com Windows também otimiza o desempenho da resolução de nome DNS ao armazenar nomes previamente definidos na memória. O comando <span class="cmd"><b>ipconfig /displaydns</b></span> exibe todas as entradas do DNS em cache em um sistema de computação Windows XP ou 2000. </p></content-text></page> <page type="OneColumn" id="tl0603030104"><content-media type="StaticGraphic" id="cm7036793840"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030104/cm7036793840.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030104/cm7036793840text.xml"/></content-media> <content-text><p>O Sistema de Nome de Domínios utiliza um sistema hierárquico para criar um banco de dados de nomes para fornecer resolução do nome. A hierarquia se parece com uma árvore invertida, com a raiz no topo e os galhos embaixo. </p><p>No topo da hierarquia, os servidores raiz mantêm registros sobre como chegar aos servidores de domínio de nível superior, que, por sua vez, têm registros que levam aos servidores de domínio de nível secundário, e assim por diante. </p><p>Os diferentes domínios de nível superior representam o tipo de organização ou país de origem. Exemplos de domínios de nível superior são:</p><ul><li><b>.au - Austrália </b></li><li><b> .co - Colômbia </b></li><li><b>.com - uma empresa ou setor</b></li><li><b> .jp - Japão</b></li><li><b>.org - uma organização sem fins lucrativos</b></li></ul><p>Depois dos domínios de nível superior há os domínios de segundo nível e, abaixo deles, outros domínios de nível inferior.</p><p>Cada nome de domínio fica um caminho abaixo desta árvore invertida, começando da raiz.</p><p>Por exemplo, como mostrado na figura, o servidor DNS raiz pode não saber exatamente onde o servidor de e-mail mail.cisco.com está localizado, mas mantém um registro para o domínio "com" dentro do domínio de nível superior. Da mesma forma, os servidores dentro do domínio "com" podem não ter um registro para mail.cisco.com, mas têm um registro para o domínio "cisco.com". Os servidores dentro do domínio cisco.com têm um registro (um registro MX para ser exato) para mail.cisco.com.</p><p>O Sistema de Nomes de Domínio se fia nesta hierarquia de servidores descentralizados para armazenar e manter tais registros de recursos. Os registros de recursos listam nomes de domínio que o servidor pode decidir e servidores alternativos que também podem processar solicitações. Se um determinado servidor tiver registros de recursos que correspondam a seu nível na hierarquia de domínios, diz-se que ele <b>tem autoridade</b> para tais registros.</p><p>Por exemplo, um servidor de nome no domínio cisco.netacad.net não seria oficial para o registro mail.cisco.com porque tal registro é mantido em um servidor de domínio de nível mais elevado, especificamente o servidor de nome no domínio cisco.com.</p><p><b>Links</b></p><p><content-link target="http://www.ietf.org//rfc/rfc1034.txt" type="external">http://www.ietf.org//rfc/rfc1034.txt  </content-link></p><p><content-link target="http://www.ietf.org/rfc/rfc1035.txt" type="external">http://www.ietf.org/rfc/rfc1035.txt  </content-link></p></content-text></page></topic> <topic type="" id="tl0603030200">
<title><content-text>Serviço WWW e HTTP</content-text></title>
<page type="OneColumn" id="tl0603030201"><content-media type="InteractiveGraphicRollovers" id="cm5654453107"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030200/tl0603030201/cm5654453107.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030200/tl0603030201/cm5654453107text.xml"/></content-media> <content-text><p>Quando um endereço Web (ou URL) é digitado em um navegador Web, este estabelece uma conexão com o serviço Web executado no servidor utilizando o protocolo HTTP. URLs (ou Uniform Resource Locator) e URIs (Uniform Resource Identifier) são os nomes que a maioria das pessoas associa a endereços Web. </p><p>A URL http://www.cisco.com/index.html é um exemplo de URL que se refere a um recurso específico - uma página Web nomeada <b>index.html</b> em um servidor identificado como <b>cisco.com</b> (clique nas guias da figura para ver os passos utilizados pelo HTTP).</p><p>Os navegadores Web são as aplicações cliente que nossos computadores utilizam para se conectar à World Wide Web e acessar recursos armazenados em um servidor Web. Semelhantemente à maioria de processos de servidor, o servidor Web é executado como um serviço de segundo plano e disponibiliza diferentes tipos de arquivo. </p><p>Para acessar o conteúdo, os clientes Web fazem conexões ao servidor e solicitam os recursos desejados. O servidor responde com os recursos e, no recebimento, o navegador interpreta os dados e os apresenta ao usuário.</p><p>Os navegadores podem interpretar e apresentar muitos tipos de dados, como texto simples ou Hypertext Markup Language (HTML, linguagem na qual as páginas Web são construídas). No entanto, outros tipos de dados podem exigir outro serviço ou programa, normalmente mencionado como plug-ins ou add-ons. Para ajudar o navegador a determinar que tipo de arquivo ele está recebendo, o servidor especifica o tipo de dados incluído no arquivo. </p><p>Para entender melhor como o navegador Web e o cliente Web interagem, podemos examinar como uma página Web é aberta em um navegador. Para este exemplo, utilizaremos a URL: http://www.cisco.com/web-server.htm. </p><p>Primeiro, o navegador interpreta as três partes da URL: </p><p>1. <b>http</b> (protocolo ou esquema)</p><p>2. www.cisco.com (nome do servidor)</p><p>3. <b>web-server.htm</b> (nome do arquivo específico solicitado). </p><p>Então, o navegador consulta um servidor de nomes para converter www.cisco.com em um endereço numérico, que utiliza para se conectar ao servidor. Utilizando os requerimentos do protocolo HTTP, o navegador envia uma solicitação GET ao servidor e pede o arquivo <b>web-server.htm</b>. O servidor, por sua vez, envia o <content-link target="cg3469642771" type="glossary">código</content-link> HTML para esta página Web ao navegador. Por fim, o navegador decifra o código HTML e formata a página para a janela do navegador.</p></content-text></page> <page type="OneColumn" id="tl0603030202"><content-media type="StaticGraphic" id="cm4399100543"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030200/tl0603030202/cm4399100543.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030200/tl0603030202/cm4399100543text.xml"/></content-media> <content-text><p>O Protocolo de Transferência de Hipertexto (HTTP), um dos protocolos do conjunto TCP/IP, foi originalmente desenvolvido para publicar e recuperar páginas e agora é utilizado para sistemas de informação distribuídos e colaborativos. O HTTP é utilizado na World Wide Web para transferência de dados e é um dos protocolos de aplicação mais usados. </p><p>O HTTP especifica um protocolo de solicitação/resposta. Quando um cliente, normalmente um navegador Web, envia uma mensagem de solicitação a um servidor, o protocolo HTTP define os tipos de mensagem que o cliente utiliza para solicitar a página Web e também os tipos de mensagem que o servidor usa para responder. Os três tipos de mensagem comuns são GET, POST e PUT.</p><p><b>GET</b> é uma solicitação de cliente para dados. Um navegador Web envia a mensagem <b>GET</b> para solicitar páginas de um servidor Web. Como mostrado na figura, quando o servidor recebe a solicitação <b>GET</b>, responde com uma linha de status, como HTTP/1.1 200 OK, e uma mensagem própria, cujo corpo pode ser o arquivo solicitado, uma mensagem de erro ou alguma outra informação.</p><p><b>POST</b> e <b>PUT</b> são utilizados para enviar mensagens que fazem upload de dados ao servidor Web. Por exemplo, quando o usuário insere dados em um formulário incluído em uma página Web, <b>POST</b> inclui os dados na mensagem enviada ao servidor.</p><p><b>PUT</b> faz upload dos recursos ou conteúdo para o servidor Web.</p><p>Embora seja notavelmente flexível, o HTTP não é um protocolo seguro. As mensagens <b>POST</b> fazem upload de informações ao servidor em texto simples que podem ser interceptadas e lidas. Da mesma forma, as respostas do servidor, normalmente páginas HTML, também são não-criptografadas. </p><p>Para comunicação segura pela Internet, o protocolo HTTP Seguro (HTTPS) é utilizado para acessar ou enviar informações do servidor Web. O HTTPS pode utilizar autenticação e <content-link target="cg1394678731" type="glossary">criptografia</content-link> para proteger os dados que trafegam entre o cliente e o servidor. O HTTPS especifica regras adicionais para a passagem de dados entre a camada de Aplicação e a de Transporte.</p></content-text></page> <page type="OneColumn" id="tl0603030203"><content-media type="ActivityPKA" id="cm6900187295"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030200/tl0603030203/cm6900187295/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603030000/tl0603030200/tl0603030203/cm6900187295/icontext.xml"/></content-media> <content-text><p>Nesta atividade, você irá configurar serviços DNS e HTTP e, então, estudar os pacotes resultantes quando uma página Web é solicitada ao se digitar uma URL. </p><p><b>Clique no ícone Packet Tracer para mais detalhes.</b></p></content-text></page></topic> <topic type="" id="tl0603030300">
<title><content-text>Serviços de E-mail e Protocolos SMTP/POP</content-text></title>
<page type="OneColumn" id="tl0603030301"><content-media type="StaticGraphic" id="cm7811422353"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030301/cm7811422353.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030301/cm7811422353text.xml"/></content-media> <content-text><p>O e-mail, o serviço de rede mais popular, revolucionou a forma como as pessoas se comunicam graças a sua simplicidade e velocidade. Ainda assim, para ser executado em um computador ou outro dispositivo final, o e-mail precisa de várias aplicações e serviços. Dois exemplos de protocolo da camada de Aplicação são Post Office Protocol (POP) e <b>Simple Mail Transfer Protocol</b> (SMTP), mostrados na figura. Como o HTTP, tais protocolos definem processos de cliente/servidor.</p><p>Quando as pessoas compõem mensagens de e-mail, elas normalmente utilizam uma aplicação chamada <content-link target="cg5842843646" type="glossary">Mail User Agent (MUA)</content-link>, ou cliente de e-mail. O MUA permite que mensagens sejam enviadas e coloca as mensagens recebidas na caixa de correio do cliente, ambos sendo processos diferentes. </p><p>Para receber mensagens de e-mail de um servidor de e-mail, o cliente de e-mail pode utilizar o POP. Enviar e-mail de um cliente ou servidor utiliza formatos de mensagem e cadeias de comandos definidos pelo protocolo SMTP. Normalmente, um cliente de e-mail fornece a funcionalidade dos dois protocolos em uma aplicação.</p></content-text></page> <page type="OneColumn" id="tl0603030302"><content-media type="StaticGraphic" id="cm1514436080"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030302/cm1514436080.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030302/cm1514436080text.xml"/></content-media> <content-text><p><b>Processos de Servidor de E-mail - MTA e MDA</b></p><p>O servidor de e-mail opera dois processos separados:</p><ul><li> Mail Transfer Agent (MTA) </li><li> Mail Delivery Agent (MDA) </li></ul><p>O processo MTA é utilizado para encaminhar e-mail. Como mostrado na figura, o MTA recebe mensagens do MUA ou de outro MTA em outro servidor de e-mail. Com base no cabeçalho da mensagem, ele determina como uma mensagem tem de ser encaminhada para chegar a seu destino. Se a correspondência for endereçada a um usuário cuja caixa de correio fique no servidor local, ela será passada para o MDA. Se o e-mail for para um usuário fora do servidor local, o MTA o encaminha para o MTA no servidor em questão. </p></content-text></page> <page type="OneColumn" id="tl0603030303"><content-media type="StaticGraphic" id="cm9522052632"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030303/cm9522052632.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030303/cm9522052632text.xml"/></content-media> <content-text><p>Na figura, vemos que o MDA aceita um e-mail de um MTA e faz a entrega real. O MDA recebe toda correspondência chega no MTA e a coloca nas caixas de correio dos usuários adequados. O MDA também pode solucionar problemas de entrega final, como varredura de vírus, <content-link target="cg2100490477" type="glossary">filtragem</content-link> de <content-link target="cg2443906114" type="glossary">spam</content-link> e tratamento de recebimento de retorno. A maioria das comunicações por e-mail utiliza as aplicações MUA, MTA e MDA. No entanto, há outras alternativas para entrega de e-mail.</p><p>Um cliente pode estar conectado a um sistema de e-mail corporativo, como o Lotus Notes da IBM, o Groupwise da Novell ou o Exchange da Microsoft. Tais sistemas frequentemente têm seu próprio formato interno de e-mail e seus clientes normalmente se comunicam com o servidor de e-mail utilizando um protocolo próprio.</p><p>O servidor envia ou recebe e-mail via Internet através do <content-link target="cg1592166249" type="glossary">gateway</content-link> de correspondência de Internet do produto, que realiza qualquer reformulação necessária. Se, por exemplo, duas pessoas que trabalham para a mesma empresa trocam e-mails entre si utilizando um protocolo próprio, suas mensagens podem ficar completamente dentro do sistema de e-mail corporativo da empresa. </p><p>Como outra alternativa, os computadores que não têm um MUA ainda podem se conectar a um serviço de correspondência em um navegador Web para recuperar e enviar mensagens desta forma. Alguns computadores podem executar o seu próprio MTA e gerenciar e-mails inter-domínios por conta própria.</p></content-text></page> <page type="OneColumn" id="tl0603030304"><content-media type="StaticGraphic" id="cm8938898023"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030304/cm8938898023.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030304/cm8938898023text.xml"/></content-media> <content-text><p>Como mencionado anteriormente, o e-mail pode utilizar os protocolos POP e SMTP (veja a figura para uma aplicação sobre como eles funcionam). POP e POP3 (Post Office Protocol, versão 3) são protocolos de <b>entrega</b> de correspondência de entrada e são protocolos típicos cliente/servidor. Eles entregam e-mail do servidor de e-mail ao cliente (MUA). O MDA "ouve" quando um cliente se conecta a um servidor. Quando uma conexão é estabelecida, o servidor pode entregar o e-mail ao cliente. </p><p>Por outro lado, o SMTP rege a transferência do e-mail de <b>saída</b> do cliente remetente ao servidor de e-mail (MDA), assim como o transporte de e-mail entre servidores de e-mail (MTA). O SMTP possibilita que o e-mail seja transportado por redes de dados entre tipos diferentes de servidor e software cliente, e possibilita a troca de e-mails via Internet. </p><p>O formato da mensagem do protocolo SMTP utiliza um conjunto rígido de comandos e respostas. Tais comandos suportam os procedimentos utilizados no SMTP, como início de sessão, transação de correspondência, encaminhamento de correspondência, verificação de nomes de caixa de correio, expansão de listas de correspondência e abertura e fechamento de trocas.</p><p>Alguns dos comandos especificados no protocolo SMTP são:</p><ul><li> HELO - identifica o processo do cliente SMTP para o processo do servidor SMTP</li><li> EHLO - é uma versão mais recente do HELO, que inclui extensões de serviços</li><li> MAIL FROM - Identifica o remetente</li><li> RCPT TO - Identifica o destinatário</li><li> DATA - Identifica o corpo da mensagem</li></ul></content-text></page></topic> <topic type="" id="tl0603030400">
<title><content-text>FTP</content-text></title>
<page type="OneColumn" id="tl0603030401"><content-media type="StaticGraphic" id="cm7557739899"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030400/tl0603030401/cm7557739899.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030400/tl0603030401/cm7557739899text.xml"/></content-media> <content-text><p>O File Transfer Protocol (FTP) é outro protocolo da camada de Aplicação comumente utilizado. O FTP foi desenvolvido para possibilitar transferências de arquivos entre um cliente e um servidor. Um cliente FTP é uma aplicação que roda em um computador e utilizado para carregar e baixar arquivos de um servidor que executa o daemon FTP (FTPd).</p><p>Para transferir os arquivos com sucesso, o FTP precisa de duas conexões entre o cliente e o servidor: uma para comandos e respostas e outra para a real transferência do arquivo. </p><p>O cliente estabelece a primeira conexão com o servidor na porta TCP 21. Tal conexão é utilizada para controlar o tráfego, consistindo de comandos do cliente e respostas do servidor. </p><p>O cliente estabelece a segunda conexão com o servidor pela porta TCP 20. Essa conexão é para a transferência real de arquivo e criada toda vez que houver um arquivo transferido. </p><p>A transferência de arquivos pode acontecer em ambas as direções. O cliente pode baixar um arquivo do servidor, ou o cliente pode fazer carregar um arquivo ao servidor.</p></content-text></page></topic> <topic type="" id="tl0603030500">
<title><content-text>DHCP</content-text></title>
<page type="OneColumn" id="tl0603030501"><content-media type="StaticGraphic" id="cm2042181675"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030500/tl0603030501/cm2042181675.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030500/tl0603030501/cm2042181675text.xml"/></content-media> <content-text><p>O serviço do <content-link target="cg5634427280" type="glossary">Protocolo DHCP</content-link> permite que os dispositivos em uma rede obtenham endereços IP e outras informações de um servidor DHCP. Este serviço automatiza a atribuição de endereços IP, máscaras de sub-rede, gateway e outros parâmetros de rede IP.</p><p>O DHCP permite que um host obtenha um endereço IP quando se conecta à rede. O servidor DHCP é contatado e um endereço é solicitado. O servidor DHCP escolhe um endereço de uma lista configurada de endereços chamada pool e o atribui ("aluga") ao host por um período determinado.</p><p>Em redes locais maiores, ou onde a população de usuários muda frequentemente, o DHCP é preferido. Novos usuários podem chegar com laptops e precisar de uma conexão. Outros têm novas estações de trabalho que precisam ser conectadas. Em vez de fazer com que o administrador de rede atribua endereços IP para cada estação de trabalho, é mais eficiente ter endereços IP atribuídos automaticamente usando o DHCP.</p><p>Os endereços distribuídos pelo DHCP não são atribuídos permanentemente aos hosts, mas apenas alugados por um certo tempo. Se o host for desativado ou removido da rede, o endereço volta ao pool para reutilização. Isso é especialmente útil com usuários móveis que vêm e vão em uma rede. Os usuários podem se mover livremente de local a local e restabelecer conexões de rede. O host pode obter um endereço IP quando a conexão ao hardware for feita, via LAN, com ou sem fio.</p><p>O DHCP possibilita que você acesse a Internet utilizando hotspots sem fio em aeroportos ou cafés. Ao entrar na área, o cliente DHCP de seu laptop entra em contato com o servidor DHCP local via conexão sem fio. O servidor DHCP atribui um endereço IP a seu laptop.</p><p>Como a figura mostra, diversos tipos de dispositivos podem ser servidores DHCP quando executam software de serviço DHCP. O servidor DHCP na maioria de redes médias a grandes normalmente é um servidor local dedicado com base em PC.</p><p>Com redes residenciais, o servidor DHCP normalmente fica localizado no ISP e um host na rede residencial recebe sua configuração IP diretamente do ISP. </p><p>O DHCP pode apresentar um risco à segurança, pois qualquer dispositivo conectado à rede pode receber um endereço. O risco torna a segurança física um fator importante ao determinar se o endereçamento dinâmico ou manual será utilizado.</p><p>O endereço dinâmico e o estático têm seus lugares no projeto de redes. Muitas redes utilizam DHCP e endereçamento estático. O DHCP é utilizado para hosts de finalidade geral, como dispositivos de usuário final, e endereços fixos são usados para dispositivos de rede, como gateways, switches, servidores e impressoras.</p></content-text></page> <page type="OneColumn" id="tl0603030502"><content-media type="StaticGraphic" id="cm9440505700"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030500/tl0603030502/cm9440505700.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030500/tl0603030502/cm9440505700text.xml"/></content-media> <content-text><p>Sem o DHCP, os usuários devem inserir o endereço IP, <content-link target="cg5596619457" type="glossary">máscara de sub-rede</content-link> e outras configurações de rede manualmente para entrar na rede. O servidor DHCP mantém um pool de endereços IP e aluga um endereço a qualquer cliente habilitado por DHCP quando o cliente é ativado. Como os endereços IP são dinâmicos (alugados) em vez de estáticos (atribuídos permanentemente), os endereços em desuso são automaticamente retornados ao pool para realocação. Quando um dispositivo configurado com DHCP se inicializa ou conecta à rede, o cliente transmite um pacote DHCP DISCOVER para identificar qualquer servidor DHCP disponível na rede. Um servidor DHCP responde com um DHCP OFFER, que é uma mensagem de oferta de aluguel com informações de endereço IP atribuído, máscara de sub-rede, servidor DNS e <content-link target="cg1972923277" type="glossary">gateway padrão</content-link>, além da duração do aluguel.</p><p>O cliente pode receber diversos pacotes DHCP OFFER se houver mais de um servidor DHCP na rede local, portanto, deve escolher entre eles e transmitir um pacote DHCP REQUEST que identifique o servidor explícito e a oferta de aluguel que o cliente está aceitando. Um cliente pode decidir solicitar um endereço que já havia sido alocado pelo servidor. </p><p>Presumindo que o endereço IP solicitado pelo cliente, ou oferecido pelo servidor, ainda seja válido, o servidor retornará uma mensagem DHCP <content-link target="cg8964682759" type="glossary">ACK</content-link> que confirma ao cliente que o aluguel foi finalizado. Se a oferta não for mais válida - talvez devido a um encerramento ou alocação do aluguel por outro cliente - o servidor selecionado responderá com uma mensagem DHCP NAK (Negative Acknowledgement - confirmação negativo). Se uma mensagem DHCP NAK for retornada, o processo de seleção deverá recomeçar com uma nova mensagem DHCP DISCOVER sendo transmitida.</p><p>Quando o cliente tiver o aluguel, este deverá ser renovado antes do vencimento por outra mensagem DHCP REQUEST.</p><p>O servidor DHCP garante que todos os endereços IP sejam exclusivos (um endereço IP não pode ser atribuído a dois dispositivos de rede diferentes simultaneamente). Utilizar o DHCP permite que os administradores de rede facilmente reconfigurem endereços IP de clientes sem ter que fazer alterações nos clientes manualmente. A maioria dos provedores de Internet utiliza o DHCP para alocar endereços a seus clientes que não precisam de um endereço estático.</p><p>O quarto curso do <content-link target="cg6460587111" type="glossary">CCNA</content-link> Exploration tratará da operação do DHCP mais detalhadamente. </p></content-text></page></topic> <topic type="" id="tl0603030600">
<title><content-text>Serviços de Compartilhamento de Arquivos e Protocolo SMB</content-text></title>
<page type="OneColumn" id="tl0603030601"><content-media type="InteractiveGraphicRollovers" id="cm4222420550"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030600/tl0603030601/cm4222420550.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030600/tl0603030601/cm4222420550text.xml"/></content-media> <content-text><p>O <content-link target="cg9110170005" type="glossary">protocolo SMB</content-link> é um protocolo de compartilhamento de arquivos cliente/servidor. A IBM desenvolveu o Server Message Block (SMB) no final da década de 80 para descrever a estrutura de recursos de rede compartilhados, como diretórios, arquivos, impressoras e portas seriais. É um protocolo de solicitação de resposta. Diferentemente do compartilhamento de arquivos suportado pelo FTP, os clientes estabelecem uma conexão de longo prazo aos servidores. Quando a conexão é estabelecida, o usuário do cliente pode acessar os recursos no servidor como se o recurso fosse local ao host do cliente. </p><p>Os serviços de compartilhamento de arquivo e impressão do SMB se tornaram o sustentáculo das redes Microsoft. Com a introdução da série de software Windows 2000, a Microsoft mudou a estrutura subjacente para uso do SMB. Nas versões anteriores de produtos Microsoft, os serviços SMB utilizavam um protocolo não-TCP/IP para implementar a resolução de nomes. Começando com o Windows 2000, todos os produtos Microsoft subsequentes utilizam nomeação DNS. Isso permite que os protocolos TCP/IP suportem diretamente o compartilhamento de recursos SMB, como mostrado na figura.</p><p>Os sistemas operacionais LINUX e <content-link target="cg4034066687" type="glossary">UNIX</content-link> também fornecem um método de compartilhamento de recursos com redes Microsoft utilizando uma versão do SMB chamada SAMBA<b>.</b> Os sistemas operacionais Macintosh da Apple também suportam compartilhamento de recursos utilizando o protocolo SMB.</p></content-text></page> <page type="OneColumn" id="tl0603030602"><content-media type="StaticGraphic" id="cm2597082837"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030600/tl0603030602/cm2597082837.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030600/tl0603030602/cm2597082837text.xml"/></content-media> <content-text><p>O protocolo SMB descreve o acesso ao sistema de arquivos e como os clientes podem fazer solicitações de arquivos. Ele também descreve a comunicação entre processos do protocolo SMB. Todas as SMB têm um formato em comum. Este formato utiliza um cabeçalho com tamanho fixo seguido por um parâmetro de tamanho variável e componente de dados.</p><p>As mensagens SMB podem:</p><ul><li> Iniciar, autenticar e encerrar sessões </li><li> Controlar acesso a arquivos e à impressora</li><li> Permitir que uma aplicação envie para ou receba mensagens de outro dispositivo</li></ul><p>O processo de troca de arquivos SMB é mostrado na figura.</p></content-text></page></topic> <topic type="" id="tl0603030700">
<title><content-text>Serviços P2P e Protocolo Gnutella</content-text></title>
<page type="OneColumn" id="tl0603030701"><content-media type="StaticGraphic" id="cm7315782721"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030700/tl0603030701/cm7315782721.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030700/tl0603030701/cm7315782721text.xml"/></content-media> <content-text><p>Você aprendeu sobre FTP e SMB como formas de obter arquivos. Veja outro protocolo de Aplicação. Compartilhar arquivos pela Internet se tornou extremamente popular. Com <b>aplicações P2P</b> com base no protocolo Gnutella, as pessoas podem disponibilizar arquivos em seus discos rígidos a outras pessoas para download. O software cliente compatível com Gnutella permite que os usuários se conectem a serviços Gnutella pela Internet, localizem e acessem recursos compartilhados por outros pares (peers) Gnutella. </p><p>Muitas aplicações cliente estão disponíveis para acessar a rede Gnutella, incluindo: BearShare, Gnucleus, LimeWire, Morpheus, WinMX e XoloX (veja uma tela do LimeWire na figura). Embora o Gnutella Developer Forum mantenha o protocolo básico, fornecedores de aplicações frequentemente desenvolvem extensões para que o protocolo funcione melhor em suas aplicações. </p></content-text></page> <page type="OneColumn" id="tl0603030702"><content-media type="AnimationPartialScreen" id="cm4319297686"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030700/tl0603030702/cm4319297686.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030700/tl0603030702/cm4319297686text.xml"/></content-media> <content-text><p>Muitas aplicações P2P não utilizam um banco de dados central para registrar todos os arquivos disponíveis nos pares (peers). Em vez disso, os dispositivos na rede dizem uns aos outros que arquivos estão disponíveis quando consultados e utilizam o protocolo e serviços Gnutella para suportar a localização de recursos. Veja a figura.</p><p>Quando um usuário está conectado a um serviço Gnutella, as aplicações cliente buscarão outros nós Gnutella aos quais se conectarem. Tais nós lidam com consultas para localização de recursos e respostas a tais solicitações. Eles também regem mensagens de controle, que ajudam o serviço a descobrir outros nós. As transferências de arquivos reais geralmente se fiam em serviços HTTP. </p><p>O protocolo Gnutella define cinco tipos diferentes de pacotes:</p><ul><li> ping - para descoberta de dispositivos</li><li> pong - como resposta a um ping</li><li> query - para localização de arquivos</li><li> query hit - como resposta a uma consulta</li><li> push - como solicitação de download</li></ul></content-text></page></topic> <topic type="" id="tl0603030800">
<title><content-text>Serviços e Protocolo Telnet</content-text></title>
<page type="OneColumn" id="tl0603030801"><content-media type="InteractiveGraphicHotspots" id="cm4776711215"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030800/tl0603030801/cm4776711215.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030800/tl0603030801/cm4776711215text.xml"/></content-media> <content-text><p>Muito antes dos computadores desktop com interfaces gráficas sofisticadas, as pessoas utilizavam sistemas com base em texto que frequentemente eram apenas terminais de exibição fisicamente acoplados a um computador central. Quando as redes foram disponibilizadas, as pessoas precisavam de uma maneira de acessar remotamente os sistemas de computação da mesma forma que faziam com os terminais diretamente acoplados.</p><p>O <b>Telnet</b> foi desenvolvido para atender a essa necessidade. O Telnet data do início da década de 70 e está entre um dos protocolos e serviços da camada de Aplicação mais antigos no conjunto TCP/IP. O Telnet fornece um método padrão de simulação de dispositivos de terminal com base em texto na rede de dados. O protocolo e o software cliente que implementa o protocolo são comumente chamados de Telnet.</p><p>De forma bastante adequada, uma conexão que utiliza Telnet é chamada de sessão de Terminal Virtual (VTY), ou conexão. Em vez de utilizar um dispositivo físico para se conectar ao servidor, o Telnet utiliza software para criar um dispositivo virtual que forneça os mesmos recursos de uma sessão de terminal com acesso à interface de linha de comando (CLI) do servidor.</p><p>Para suportar as conexões de cliente Telnet, o servidor executa um serviço chamado daemon Telnet. Uma conexão de terminal virtual é estabelecida de um dispositivo final utilizando uma aplicação de cliente Telnet. A maioria dos sistemas operacionais inclui um cliente Telnet da camada de Aplicação. Em um PC Windows da Microsoft, o Telnet pode ser executado a partir do prompt de comando. Outras aplicações de terminal comuns que rodam como clientes Telnet são HyperTerminal, Minicom e TeraTerm.</p><p>Quando uma conexão Telnet é estabelecida, os usuários podem executar qualquer função autorizada no servidor, como se estivessem utilizando uma sessão de linha de comando no próprio servidor. Se autorizados, podem iniciar e parar processos, configurar o dispositivo e até mesmo desligar o sistema.</p><p><b>Clique nas guias na figura para ver um exemplo do Telnet.</b></p></content-text></page> <page type="OneColumn" id="tl0603030802"><content-media type="StaticGraphic" id="cm7027897161"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030800/tl0603030802/cm7027897161.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030800/tl0603030802/cm7027897161text.xml"/></content-media> <content-text><p>O Telnet é um protocolo cliente/servidor e especifica como uma sessão VTY é estabelecida e encerrada. Ele também fornece a sintaxe e ordem dos comandos utilizados para iniciar a sessão Telnet, além dos comandos de controle que podem ser emitidos durante uma sessão. Cada comando Telnet consiste de, pelo menos, dois bytes. O primeiro byte é um caractere especial chamado de caractere Interpretar como Comando (<b>Interpret as Command</b> - IAC). Como o nome diz, o IAC define o byte seguinte como um comando em vez de um texto. </p><p>Alguns exemplos de comandos do protocolo Telnet incluem:</p><p><b>Are You There (AYT) - </b>Permite que o usuário solicite que algo apareça na tela do terminal para indicar que a sessão VTY está ativa.</p><p><b>Erase Line (EL) - </b>Apaga todo o texto da linha atual. </p><p><b>Interrupt Process (IP) - </b>Suspende, interrompe, pausa ou encerra o processo ao qual o Terminal Virtual está conectado. Por exemplo, se um usuário iniciou um programa no servidor Telnet via VTY, poderá enviar um comando para parar o programa. </p><p>Embora o protocolo Telnet suporte autenticação de usuário, não suporta o transporte de dados <content-link target="cg5452432536" type="glossary">criptografados</content-link>. Todos os dados trocados durante uma sessão Telnet são transportados como texto simples pela rede. Isso significa que os dados podem ser interceptados e compreendidos facilmente.</p><p>Se a segurança for um problema, o protocolo Secure Shell (SSH) oferece um método alternativo e seguro para acesso ao servidor. O SSH fornece a estrutura para proteger o login remoto e outros serviços de rede segura. Ele também fornece autenticação mais forte que o Telnet e suporta o transporte de dados de sessão utilizando criptografia. <b>Como melhor prática, os profissionais de rede sempre devem utilizar o SSH em vez do Telnet, quando possível.</b></p><p>Mais adiante neste curso, utilizaremos o Telnet e o SSH para acessar e configurar dispositivos de rede na rede do laboratório.</p></content-text></page></topic></section> <section type="" id="tl0603040000">
<title><content-text>Laboratório e Atividades do Capítulo</content-text></title>
<topic type="" id="tl0603040100">
<title><content-text>Captura do Fluxo de Dados</content-text></title>
<page type="OneColumn" id="tl0603040101"><content-media type="ActivityLab" id="cm2021964654"><title><content-text></content-text></title><media ref="tl0603000000/tl0603040000/tl0603040100/tl0603040101/cm2021964654/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603040000/tl0603040100/tl0603040101/cm2021964654/icontext.xml"/></content-media> <content-text><p>Nesta atividade, você utilizará um computador com microfone e Gravador de Som da Microsoft, ou acesso à Internet para que o arquivo de áudio possa ser baixado. </p><p><b>Clique no ícone do laboratório para mais detalhes.</b></p></content-text></page></topic> <topic type="" id="tl0603040200">
<title><content-text>Laboratório - Gerenciando um Servidor Web</content-text></title>
<page type="OneColumn" id="tl0603040201"><content-media type="ActivityLab" id="cm8264127356"><title><content-text></content-text></title><media ref="tl0603000000/tl0603040000/tl0603040200/tl0603040201/cm8264127356/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603040000/tl0603040200/tl0603040201/cm8264127356/icontext.xml"/></content-media> <content-text><p>Neste laboratório, você irá baixar, instalar e configurar o popular servidor Web Apache. Um navegador Web será utilizado para conexão ao servidor, e o Wireshark será utilizado para capturar a comunicação. A análise da captura ajudará os alunos a entender como o protocolo HTTP opera.</p><p><b>Clique no ícone do laboratório para mais detalhes</b></p></content-text></page></topic> <topic type="" id="tl0603040300">
<title><content-text>Laboratório - Serviços de E-mail e Protocolos</content-text></title>
<page type="OneColumn" id="tl0603040301"><content-media type="ActivityLab" id="cm7259638612"><title><content-text></content-text></title><media ref="tl0603000000/tl0603040000/tl0603040300/tl0603040301/cm7259638612/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603040000/tl0603040300/tl0603040301/cm7259638612/icontext.xml"/></content-media> <content-text><p>Neste laboratório, você irá configurar e utilizar uma aplicação cliente de e-mail para se conectar aos serviços de rede do eagle-server. Então, você irá monitorar a comunicação com o Wireshark e analisar os pacotes capturados. </p><p><b>Clique no ícone do laboratório para mais detalhes</b></p></content-text></page></topic></section> <section type="ChapterSummary" id="tl0603050000">
<title><content-text>Resumo do Capítulo</content-text></title>
<topic type="" id="tl0603050100">
<title><content-text>Resumo e Revisão</content-text></title>
<page type="OneColumn" id="tl0603050101"><content-media type="StaticGraphic" id="cm6137255147"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050101/cm6137255147.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603050000/tl0603050100/tl0603050101/cm6137255147text.xml"/></content-media> <content-text><p>A <b>camada de Aplicação</b> é responsável pelo acesso direto a processos subjacentes que gerenciam e fornecem a comunicação à rede humana. Esta camada serve como origem e destino de comunicações em redes de dados.</p><p>As aplicações, protocolos e serviços da camada de Aplicação permitem que os usuários interajam com a rede de maneira significativa e efetiva.</p><p><b>Aplicações</b> são programas de computador com os quais o usuário interage e que iniciam processos de transferência de dados mediante solicitação do usuário.</p><p><b>Serviços</b> são programas de segundo plano que fornecem a conexão entre a camada de Aplicação e as camadas inferiores do modelo de rede.</p><p><b>Protocolos</b> fornecem uma estrutura de regras e processos acordados que garantem que os serviços executados em um dispositivo em particular possam enviar e receber dados de vários dispositivos de rede diferentes.</p><p>O fornecimento de dados pela rede pode ser solicitado de um <b>servidor</b> por um <b>cliente</b>, ou entre dispositivos que operam em um acordo <b>não-hierárquico</b>, onde a relação cliente/servidor é estabelecida de acordo com o dispositivo de origem e destino no momento. <b>Mensagens</b> são trocadas entre os serviços da camada de Aplicação em cada dispositivo final de acordo com as especificações do protocolo para estabelecimento e uso dessas relações.</p><p>Protocolos como <b>HTTP</b>, por exemplo, suportam a entrega de páginas Web a dispositivos finais. Protocolos <b>SMTP/POP</b> suportam o envio e recebimento de e-mail. <b>SMB</b> permite que usuários compartilhem arquivos. <b>DNS</b> resolve nomes legíveis utilizados para se referir a recursos de rede em endereços numéricos da rede.</p></content-text></page> <page type="FullScreen" id="tl0603050102"><content-media type="ChapterSummary" id="cm8666984520"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050102/cm8666984520.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603050000/tl0603050100/tl0603050102/cm8666984520text.xml"/></content-media> <content-text></content-text></page> <page type="OneColumn" id="tl0603050103"><content-media type="ActivityPKA" id="cm5972810116"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050103/cm5972810116/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603050000/tl0603050100/tl0603050103/cm5972810116/icontext.xml"/></content-media> <content-text><p>Nesta atividade, você irá construir e analisar partes mais complexas do modelo de rede do laboratório do Exploration. </p><p><content-link target="E1_PTAct_3_5_1_Directions.pdf" type="internalfile">Instruções de Integração de Habilidades do Packet Tracer (PDF)</content-link></p></content-text></page> <page type="OneColumn" id="tl0603050104"><content-media type="StaticGraphic" id="cm1975441776"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050104/cm1975441776.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603050000/tl0603050100/tl0603050104/cm1975441776text.xml"/></content-media> <content-text><p><b>Saiba Mais</b></p><p><b>Perguntas de Reflexão</b></p><p>Por que é importante diferenciar entre uma aplicação em particular da camada de Aplicação, o serviço associado e o protocolo? Discuta isso no contexto dos modelos de referência de rede.</p><p>E se fosse possível incluir todos os serviços da camada de Aplicação em um único protocolo que abrangesse tudo? Discuta as vantagens e desvantagens de ter tal protocolo.</p><p>Como você desenvolveria um novo protocolo para um novo serviço da camada de Aplicação? O que teria de ser incluído? Quem teria que se envolver no processo e como as informações seriam disseminadas? </p><p><b>Links</b></p><p><content-link target="http://www.ietf.org/" type="external">http://www.ietf.org/  </content-link></p><p><content-link target="http://www.protocols.com/" type="external">http://www.protocols.com/  </content-link></p></content-text></page></topic></section> <section type="ChapterQuiz" id="tl0603060000">
<title><content-text>Teste do Capítulo</content-text></title>
<topic type="" id="tl0603060100">
<title><content-text>Teste do Capítulo</content-text></title>
<page type="FullScreen" id="tl0603060101"><content-media type="ChapterQuiz" id="cm2966772849"><title><content-text></content-text></title><media ref="tl0603000000/tl0603060000/tl0603060100/tl0603060101/cm2966772849/" mime="" scale="true" type="directory" width="100%" height="100%" external="tl0603000000/tl0603060000/tl0603060100/tl0603060101/cm2966772849/icontext.xml"/></content-media> <content-text></content-text></page></topic></section></chapter>
